#!/bin/bash

# Dreamcast CDI Burner build script
version=v1.0.9

# When this script exits, automatically delete the temp directory.
cleanup() 
{ 
    if [[ -e "$tmp" ]]; then
        echo "Clearing temp files..."  
        rm -r "$tmp"   
    fi
}
trap cleanup EXIT

# Print out any uncaught errors.
err() 
{	
    echo -e "\nUncaught error in $0, line number: $BASH_LINENO" >&2
}
trap err ERR

# Put temp directory in /tmp (or whatever the OS prefers)
tmp=$(mktemp -d --tmpdir cdib.XXX)

set -e
arch=$(uname -m)

cd "$(dirname "$0")"
rm -rf dcdib-$version-$arch dcdib-$version-$arch.zip

if [ "$1" == "clean" ]; then
    exit 0
fi

if command -v apt > /dev/null 2>&1; then
    echo "APT package manager detected for build dependencies, sudo is required to install them:"
    sudo apt update
    sudo apt install --yes build-essential cmake patchelf zip
fi

mkdir -p dcdib-$version-$arch/licenses

cp -r cdirip $tmp
make -C $tmp/cdirip -f Makefile.linux
pled/pled $tmp/cdirip/cdirip dcdib-$version-$arch/bin

cp -r p7zip $tmp
make -C $tmp/p7zip/CPP/7zip/Bundles/Alone -f makefile.gcc
pled/pled $tmp/p7zip/CPP/7zip/Bundles/Alone/_o/bin/7za dcdib-$version-$arch/bin

cp -r cdrtools $tmp
make -C $tmp/cdrtools
# Use * here because the begining name of the parent folder differs by architecture/OS/compiler
pled/pled $tmp/cdrtools/cdrecord/OBJ/*cc/cdrecord dcdib-$version-$arch/bin

cp unlicense.md dcdib-$version-$arch/licenses/dcdib.md
cp pled/unlicense.md dcdib-$version-$arch/licenses/pled.txt
cp cdirip/LICENSE dcdib-$version-$arch/licenses/cdirip-gpl2.txt
cp cdrtools/GPL-2.0.txt dcdib-$version-$arch/licenses/cdrecord-gpl2.txt
cp cdrtools/CDDL.Schily.txt dcdib-$version-$arch/licenses/cdrecord-cddl.txt
cp p7zip/DOC/License.txt dcdib-$version-$arch/licenses/p7zip.txt

cp -r dcdib readme.md images dcdib-$version-$arch/
chmod -R 777 dcdib-$version-$arch
zip -r dcdib-$version-$arch.zip dcdib-$version-$arch
